name: Publish arc libraries

on:
  pull_request:
    types:
      - closed

jobs:
  publish:
    ### Only execute on merged PR
    ### and if the source branch is `release_*`
    ### (i.e. merging `release_*` into `master`)
    if: github.event.pull_request.merged == true && startsWith(github.head_ref, 'release_')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # https://github.com/lerna/lerna/issues/2542
          # pulls all commits (needed for lerna / semantic release to correctly version)
          fetch-depth: "0"
          ### After merging, we want to checkout the commit before merge,
          ### and tag that (not the merge commit, since things
          ### may have changed on the target branch)
          ref: ${{ github.event.pull_request.head.sha }}
      - name: setup node
        uses: actions/setup-node@v1
        with:
            node-version: '12.x'
            registry-url: 'https://registry.npmjs.org'
      # https://github.com/lerna/lerna/issues/2542
      # pulls all tags (needed for lerna / semantic release to correctly version)
      - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*
      - run: npm install
      - run: npm run bootstrap
      - run: npm run ci:publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      ### We need to manually parse the new version from
      ### the bumped file
      - name: get published version
        id: version
        uses: notiz-dev/github-action-json-property@release
        with:
          path: 'lerna.json'
          prop_path: 'version'
      ### Set the user in the gitconfig
      ### so that it can properly push the tag
      - run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
      ### Finally, after publishing, tag the version
      ### We must use an annotated tag in order for lerna's versioning to work properly
      - run: git tag -a v${{steps.version.outputs.prop}} -m v${{steps.version.outputs.prop}} && git push --tags
